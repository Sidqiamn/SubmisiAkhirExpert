com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1
com.example.core.data.NewsDao_Impl$8
com.example.core.data.NewsDao_Impl$4
com.example.core.domain.Result$Loading
com.example.core.data.NewsRepository$getHeadlineNews$1
com.example.core.data.NewsRepository$Companion
com.example.core.domain.usecase.NewsUseCase
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2
com.example.core.data.service.ApiConfig$Companion
com.example.core.domain.repository.INewsRepository
com.example.core.data.NewsDao_Impl$7
com.example.core.domain.Result
com.example.core.data.NewsDao
com.example.core.domain.Result$Error
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2
com.example.core.data.NewsDao_Impl
com.example.core.R$drawable
com.example.core.data.service.ApiService
com.example.core.domain.model.News
com.example.core.data.NewsDao_Impl$5
com.example.core.data.service.ApiConfig
com.example.core.data.EventResponse
com.example.core.domain.Result$Success
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2$1
com.example.core.data.NewsRepository
com.example.core.data.NewsDao_Impl$6
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1
com.example.core.R$string
com.example.core.data.NewsDao_Impl$3
com.example.core.data.NewsDatabase
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1
com.example.core.data.NewsDatabase_Impl
com.example.core.data.NewsDao_Impl$1
com.example.core.data.NewsEntity
com.example.core.data.NewsRepository$getBookmarkedNews$2
com.example.core.data.NewsDatabase$Companion
com.example.core.data.NewsDao_Impl$2
com.example.core.data.ListEventsItem
com.example.core.utils.DataMapper
com.example.core.data.NewsDatabase_Impl$1
com.example.core.domain.usecase.NewsInteractor
com.example.core.data.NewsEntity$Creator
com.example.core.data.NewsRepository$getHeadlineNews$2
com.example.core.R
com.example.core.domain.model.News$Creator
com.example.core.data.NewsEntity: java.lang.String publishedAt
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1: java.lang.Object L$0
com.example.core.data.NewsDatabase_Impl: com.example.core.data.NewsDao _newsDao
com.example.core.data.NewsEntity: java.lang.String urlToImage
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
com.example.core.domain.model.News: java.lang.String description
com.example.core.R$string: int register
com.example.core.R$drawable: int ic_bookmarked_white
com.example.core.R$drawable: int baseline_favorite_border_24
com.example.core.data.ListEventsItem: java.lang.String ownerName
com.example.core.data.ListEventsItem: java.lang.String imageLogo
com.example.core.data.service.ApiConfig: com.example.core.data.service.ApiConfig$Companion Companion
com.example.core.domain.model.News: java.lang.String id
com.example.core.data.NewsDao_Impl$4: java.util.List val$news
com.example.core.data.NewsDatabase: net.sqlcipher.database.SupportFactory factory
com.example.core.data.NewsDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter __updateAdapterOfNewsEntity
com.example.core.data.ListEventsItem: java.lang.String cityName
com.example.core.data.NewsDao_Impl: androidx.room.RoomDatabase __db
com.example.core.domain.model.News: java.lang.String category
com.example.core.data.NewsDao_Impl$5: com.example.core.data.NewsEntity val$news
com.example.core.R$string: int back_button
com.example.core.domain.model.News: boolean isBookmarked
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2$1: int label
com.example.core.data.NewsDao_Impl$1: com.example.core.data.NewsDao_Impl this$0
com.example.core.data.EventResponse: java.lang.String message
com.example.core.data.NewsRepository$getHeadlineNews$1: int label
com.example.core.data.EventResponse: boolean error
com.example.core.R$string: int gambar_acara
com.example.core.data.ListEventsItem: java.lang.String mediaCover
com.example.core.data.NewsEntity: java.lang.String title
com.example.core.domain.model.News: java.lang.String cityName
com.example.core.domain.Result$Success: java.lang.Object data
com.example.core.data.NewsRepository$getHeadlineNews$2: int label
com.example.core.R$drawable: int ic_bookmark_white
com.example.core.data.NewsRepository$getBookmarkedNews$2: java.lang.Object L$0
com.example.core.data.ListEventsItem: int registrants
com.example.core.data.NewsDatabase: com.example.core.data.NewsDatabase$Companion Companion
com.example.core.data.NewsEntity: boolean isBookmarked
com.example.core.domain.model.News: java.lang.String imageLogo
com.example.core.domain.model.News: android.os.Parcelable$Creator CREATOR
com.example.core.data.NewsRepository: com.example.core.data.NewsRepository instance
com.example.core.R$string: int published_date
com.example.core.domain.model.News: int quota
com.example.core.data.ListEventsItem: java.lang.String link
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2$1: java.lang.Object L$0
com.example.core.data.NewsDao_Impl$8: androidx.room.RoomSQLiteQuery val$_statement
com.example.core.domain.model.News: java.lang.String name
com.example.core.domain.model.News: java.lang.String ownerName
com.example.core.domain.model.News: java.lang.String link
com.example.core.R$drawable: int baseline_keyboard_backspace_24_white
com.example.core.data.NewsDao_Impl$2: com.example.core.data.NewsDao_Impl this$0
com.example.core.domain.model.News: java.lang.String endTime
com.example.core.R$string: int save_bookmark
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1: com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2 this$0
com.example.core.R$string: int title
com.example.core.data.NewsDao_Impl$4: com.example.core.data.NewsDao_Impl this$0
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
com.example.core.data.ListEventsItem: java.lang.String description
com.example.core.data.ListEventsItem: int quota
com.example.core.data.ListEventsItem: java.lang.String summary
com.example.core.data.ListEventsItem: java.lang.String endTime
com.example.core.R$drawable: int ic_error
com.example.core.domain.model.News: java.lang.String mediaCover
com.example.core.data.NewsRepository$getHeadlineNews$2: java.lang.Object L$1
com.example.core.data.NewsDao_Impl$3: com.example.core.data.NewsDao_Impl this$0
com.example.core.data.ListEventsItem: java.lang.String beginTime
com.example.core.data.NewsRepository$getHeadlineNews$1: java.lang.Object L$1
com.example.core.data.NewsDatabase_Impl$1: com.example.core.data.NewsDatabase_Impl this$0
com.example.core.domain.Result$Error: java.lang.String error
com.example.core.R$drawable: int ic_loading
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
com.example.core.data.NewsEntity: java.lang.String link
com.example.core.data.ListEventsItem: java.lang.String name
com.example.core.domain.Result$Loading: com.example.core.domain.Result$Loading INSTANCE
com.example.core.data.NewsEntity: java.lang.String penyelenggaraAcara
com.example.core.data.NewsRepository: com.example.core.data.NewsRepository$Companion Companion
com.example.core.data.NewsRepository: com.example.core.data.service.ApiService apiService
com.example.core.data.NewsEntity: android.os.Parcelable$Creator CREATOR
com.example.core.data.NewsEntity: java.lang.String url
com.example.core.domain.model.News: java.lang.String beginTime
com.example.core.data.NewsEntity: java.lang.String summary
com.example.core.data.NewsEntity: java.lang.String desckripsi
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2$1: java.lang.Object result
com.example.core.data.NewsRepository$getBookmarkedNews$2: int label
com.example.core.data.NewsRepository$getHeadlineNews$2: java.lang.Object L$0
com.example.core.data.NewsRepository$getHeadlineNews$1: com.example.core.data.NewsRepository this$0
com.example.core.data.NewsRepository: com.example.core.data.NewsDao newsDao
com.example.core.data.NewsEntity: int quota
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1: java.lang.Object result
com.example.core.data.NewsDao_Impl$7: com.example.core.data.NewsDao_Impl this$0
com.example.core.data.service.ApiConfig: java.lang.String BASE_URL
com.example.core.data.NewsDao_Impl$7: androidx.room.RoomSQLiteQuery val$_statement
com.example.core.data.NewsDao_Impl$8: com.example.core.data.NewsDao_Impl this$0
com.example.core.data.NewsRepository$getHeadlineNews$1: java.lang.Object L$0
com.example.core.data.ListEventsItem: int id
com.example.core.domain.usecase.NewsInteractor: com.example.core.domain.repository.INewsRepository newsRepository
com.example.core.data.NewsDatabase: byte[] passphrase
com.example.core.data.NewsDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfDeleteAll
com.example.core.data.NewsEntity: java.lang.String waktu
com.example.core.utils.DataMapper: com.example.core.utils.DataMapper INSTANCE
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
com.example.core.data.NewsDao_Impl$5: com.example.core.data.NewsDao_Impl this$0
com.example.core.data.NewsDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfNewsEntity
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2$1: com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2 this$0
com.example.core.R$drawable: int baseline_keyboard_backspace_24
com.example.core.data.EventResponse: java.util.List listEvents
com.example.core.domain.model.News: java.lang.String summary
com.example.core.data.ListEventsItem: java.lang.String category
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1: int label
com.example.core.R$drawable: int baseline_favorite_24
com.example.core.data.NewsDatabase: com.example.core.data.NewsDatabase instance
com.example.core.data.NewsDao_Impl$6: com.example.core.data.NewsDao_Impl this$0
com.example.core.data.NewsDao_Impl: java.lang.Object insertNews(java.util.List,kotlin.coroutines.Continuation)
com.example.core.data.NewsEntity$Creator: java.lang.Object[] newArray(int)
com.example.core.data.NewsDatabase$Companion: NewsDatabase$Companion()
com.example.core.domain.model.News: java.lang.String getCategory()
com.example.core.data.ListEventsItem: int component9()
com.example.core.data.NewsRepository$getHeadlineNews$2: NewsRepository$getHeadlineNews$2(kotlin.coroutines.Continuation)
com.example.core.data.NewsRepository: com.example.core.data.NewsRepository access$getInstance$cp()
com.example.core.data.NewsRepository: kotlinx.coroutines.flow.Flow getHeadlineNews()
com.example.core.data.NewsDatabase_Impl: void access$300(com.example.core.data.NewsDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.data.NewsEntity: void setBookmarked(boolean)
com.example.core.data.NewsDatabase_Impl$1: androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.data.EventResponse: java.lang.String toString()
com.example.core.domain.model.News: java.lang.String component3()
com.example.core.domain.Result$Success: java.lang.Object component1()
com.example.core.data.NewsDao: kotlinx.coroutines.flow.Flow getBookmarkedNews()
com.example.core.data.EventResponse: com.example.core.data.EventResponse copy(java.util.List,boolean,java.lang.String)
com.example.core.domain.model.News: java.lang.String component6()
com.example.core.data.NewsEntity: int describeContents()
com.example.core.domain.model.News: java.lang.String getName()
com.example.core.domain.repository.INewsRepository: kotlinx.coroutines.flow.Flow getBookmarkedNews()
com.example.core.domain.model.News: java.lang.String getId()
com.example.core.domain.Result$Success: com.example.core.domain.Result$Success copy(java.lang.Object)
com.example.core.domain.Result: Result()
com.example.core.domain.Result$Error: int hashCode()
com.example.core.domain.model.News: java.lang.String component13()
com.example.core.data.NewsEntity$Creator: com.example.core.data.NewsEntity[] newArray(int)
com.example.core.data.NewsRepository: com.example.core.data.NewsDao access$getNewsDao$p(com.example.core.data.NewsRepository)
com.example.core.data.NewsDatabase$Companion: com.example.core.data.NewsDatabase getInstance(android.content.Context)
com.example.core.data.NewsDatabase$Companion: NewsDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.example.core.data.ListEventsItem: java.lang.String component5()
com.example.core.domain.model.News: java.lang.String component5()
com.example.core.data.NewsDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.example.core.domain.usecase.NewsInteractor: NewsInteractor(com.example.core.domain.repository.INewsRepository)
com.example.core.data.NewsEntity$Creator: com.example.core.data.NewsEntity createFromParcel(android.os.Parcel)
com.example.core.data.service.ApiConfig$Companion: ApiConfig$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.example.core.data.NewsDatabase: com.example.core.data.NewsDao newsDao()
com.example.core.data.ListEventsItem: int component3()
com.example.core.utils.DataMapper: DataMapper()
com.example.core.data.NewsDao_Impl$2: NewsDao_Impl$2(com.example.core.data.NewsDao_Impl,androidx.room.RoomDatabase)
com.example.core.data.NewsDao_Impl$7: java.util.List call()
com.example.core.data.NewsDatabase_Impl$1: void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.data.ListEventsItem: java.lang.String getImageLogo()
com.example.core.domain.model.News: void writeToParcel(android.os.Parcel,int)
com.example.core.domain.model.News: java.lang.String component2()
com.example.core.data.NewsDao: kotlinx.coroutines.flow.Flow getNews()
com.example.core.data.NewsDatabase_Impl: void clearAllTables()
com.example.core.data.ListEventsItem: java.lang.String getName()
com.example.core.domain.model.News: int component8()
com.example.core.data.ListEventsItem: java.lang.String getCityName()
com.example.core.domain.model.News: java.lang.String component1()
com.example.core.data.NewsDao_Impl$7: void finalize()
com.example.core.data.NewsRepository$getHeadlineNews$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
com.example.core.domain.Result$Success: java.lang.String toString()
com.example.core.data.ListEventsItem: com.example.core.data.ListEventsItem copy$default(com.example.core.data.ListEventsItem,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.example.core.data.NewsEntity: int getQuota()
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2$1: NewsRepository$getBookmarkedNews$$inlined$map$1$2$1(com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2,kotlin.coroutines.Continuation)
com.example.core.data.ListEventsItem: java.lang.String getLink()
com.example.core.data.NewsDatabase_Impl$1: void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.data.ListEventsItem: int component11()
com.example.core.data.NewsDao_Impl$5: java.lang.Object call()
com.example.core.data.NewsRepository$getHeadlineNews$1: java.lang.Object invokeSuspend(java.lang.Object)
com.example.core.data.NewsDao_Impl$5: kotlin.Unit call()
com.example.core.R$drawable: R$drawable()
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
com.example.core.data.EventResponse: int hashCode()
com.example.core.data.NewsDao_Impl$2: void bind(androidx.sqlite.db.SupportSQLiteStatement,com.example.core.data.NewsEntity)
com.example.core.data.NewsDao_Impl: NewsDao_Impl(androidx.room.RoomDatabase)
com.example.core.data.ListEventsItem: java.lang.String getMediaCover()
com.example.core.data.NewsRepository: com.example.core.data.service.ApiService access$getApiService$p(com.example.core.data.NewsRepository)
com.example.core.data.EventResponse: EventResponse(java.util.List,boolean,java.lang.String)
com.example.core.data.EventResponse: boolean component2()
com.example.core.data.NewsRepository$getHeadlineNews$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.example.core.data.NewsEntity$Creator: java.lang.Object createFromParcel(android.os.Parcel)
com.example.core.domain.Result$Success: Result$Success(java.lang.Object)
com.example.core.domain.model.News: java.lang.String getDescription()
com.example.core.data.ListEventsItem: java.lang.String getDescription()
com.example.core.data.NewsDao_Impl: java.util.List getRequiredConverters()
com.example.core.data.NewsRepository: java.lang.Object setBookmarkedNews(com.example.core.domain.model.News,boolean,kotlin.coroutines.Continuation)
com.example.core.data.NewsDatabase_Impl$1: NewsDatabase_Impl$1(com.example.core.data.NewsDatabase_Impl,int)
com.example.core.data.NewsDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,com.example.core.data.NewsEntity)
com.example.core.data.service.ApiConfig$Companion: ApiConfig$Companion()
com.example.core.data.service.ApiConfig: ApiConfig()
com.example.core.domain.model.News: java.lang.String component10()
com.example.core.domain.model.News: java.lang.String getImageLogo()
com.example.core.data.NewsEntity: java.lang.String getUrlToImage()
com.example.core.domain.usecase.NewsUseCase: java.lang.Object setBookmarkedNews(com.example.core.domain.model.News,boolean,kotlin.coroutines.Continuation)
com.example.core.data.NewsDao_Impl$6: java.lang.Object call()
com.example.core.utils.DataMapper: java.util.List mapEntitiesToDomain(java.util.List)
com.example.core.data.NewsEntity: java.lang.String getPenyelenggaraAcara()
com.example.core.data.NewsDatabase_Impl: androidx.sqlite.db.SupportSQLiteDatabase access$202(com.example.core.data.NewsDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.utils.DataMapper: java.util.List mapResponsesToEntities(java.util.List)
com.example.core.data.ListEventsItem: int getRegistrants()
com.example.core.data.ListEventsItem: java.lang.String getEndTime()
com.example.core.domain.Result$Success: boolean equals(java.lang.Object)
com.example.core.data.NewsDao_Impl$8: NewsDao_Impl$8(com.example.core.data.NewsDao_Impl,androidx.room.RoomSQLiteQuery)
com.example.core.data.NewsDatabase: net.sqlcipher.database.SupportFactory access$getFactory$cp()
com.example.core.data.NewsRepository: kotlinx.coroutines.flow.Flow getBookmarkedNews()
com.example.core.data.NewsDatabase_Impl: java.util.List access$000(com.example.core.data.NewsDatabase_Impl)
com.example.core.data.ListEventsItem: java.lang.String getBeginTime()
com.example.core.data.ListEventsItem: ListEventsItem(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
com.example.core.data.NewsDao_Impl$8: java.util.List call()
com.example.core.domain.Result$Loading: Result$Loading()
com.example.core.data.NewsEntity: java.lang.String getLink()
com.example.core.data.EventResponse: java.lang.String component3()
com.example.core.data.NewsDao_Impl$6: NewsDao_Impl$6(com.example.core.data.NewsDao_Impl)
com.example.core.data.NewsRepository$getHeadlineNews$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.example.core.data.ListEventsItem: java.lang.String getSummary()
com.example.core.data.NewsRepository: NewsRepository(com.example.core.data.service.ApiService,com.example.core.data.NewsDao,kotlin.jvm.internal.DefaultConstructorMarker)
com.example.core.domain.model.News: java.lang.String getEndTime()
com.example.core.domain.model.News: java.lang.String component7()
com.example.core.data.ListEventsItem: java.lang.String component4()
com.example.core.domain.Result$Success: com.example.core.domain.Result$Success copy$default(com.example.core.domain.Result$Success,java.lang.Object,int,java.lang.Object)
com.example.core.R: R()
com.example.core.data.NewsEntity: NewsEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.example.core.data.ListEventsItem: java.lang.String component2()
com.example.core.domain.Result$Error: Result$Error(java.lang.String)
com.example.core.data.NewsEntity: boolean isBookmarked()
com.example.core.data.ListEventsItem: java.lang.String toString()
com.example.core.data.NewsRepository$getHeadlineNews$1: NewsRepository$getHeadlineNews$1(com.example.core.data.NewsRepository,kotlin.coroutines.Continuation)
com.example.core.data.NewsDao_Impl$7: java.lang.Object call()
com.example.core.data.NewsDatabase_Impl$1: void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.data.ListEventsItem: int hashCode()
com.example.core.data.NewsDao_Impl$3: java.lang.String createQuery()
com.example.core.domain.model.News: java.lang.String getOwnerName()
com.example.core.data.NewsDao_Impl: kotlinx.coroutines.flow.Flow getBookmarkedNews()
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.example.core.data.ListEventsItem: java.lang.String component1()
com.example.core.data.NewsDatabase_Impl: java.util.List getAutoMigrations(java.util.Map)
com.example.core.R$string: R$string()
com.example.core.data.NewsDao_Impl$6: kotlin.Unit call()
com.example.core.domain.Result$Error: java.lang.String component1()
com.example.core.data.NewsDatabase_Impl: androidx.room.InvalidationTracker createInvalidationTracker()
com.example.core.domain.Result$Loading: boolean equals(java.lang.Object)
com.example.core.data.NewsDatabase_Impl: java.util.Set getRequiredAutoMigrationSpecs()
com.example.core.data.NewsEntity: java.lang.String getUrl()
com.example.core.data.NewsDao_Impl$4: NewsDao_Impl$4(com.example.core.data.NewsDao_Impl,java.util.List)
com.example.core.data.NewsEntity: NewsEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.example.core.data.NewsDao_Impl$8: java.lang.Object call()
com.example.core.domain.model.News: boolean equals(java.lang.Object)
com.example.core.domain.model.News: int describeContents()
com.example.core.data.EventResponse: java.util.List getListEvents()
com.example.core.domain.model.News: java.lang.String component9()
com.example.core.domain.model.News: int hashCode()
com.example.core.data.NewsDao_Impl$1: java.lang.String createQuery()
com.example.core.data.NewsDao_Impl: java.lang.Object deleteAll(kotlin.coroutines.Continuation)
com.example.core.domain.model.News: java.lang.String getBeginTime()
com.example.core.domain.model.News$Creator: java.lang.Object[] newArray(int)
com.example.core.data.NewsRepository$getHeadlineNews$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)
com.example.core.data.NewsRepository: NewsRepository(com.example.core.data.service.ApiService,com.example.core.data.NewsDao)
com.example.core.domain.Result$Loading: java.lang.String toString()
com.example.core.data.NewsDao: java.lang.Object deleteAll(kotlin.coroutines.Continuation)
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1: NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2$1(com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2,kotlin.coroutines.Continuation)
com.example.core.data.NewsDatabase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.data.NewsDao_Impl$3: NewsDao_Impl$3(com.example.core.data.NewsDao_Impl,androidx.room.RoomDatabase)
com.example.core.domain.model.News: java.lang.String getCityName()
com.example.core.domain.model.News$Creator: News$Creator()
com.example.core.data.ListEventsItem: int getQuota()
com.example.core.data.NewsDatabase_Impl: java.util.Map getRequiredTypeConverters()
com.example.core.data.ListEventsItem: java.lang.String component8()
com.example.core.data.NewsEntity: java.lang.String getDesckripsi()
com.example.core.domain.Result$Loading: int hashCode()
com.example.core.data.ListEventsItem: java.lang.String getOwnerName()
com.example.core.domain.model.News: boolean component14()
com.example.core.domain.Result$Error: com.example.core.domain.Result$Error copy$default(com.example.core.domain.Result$Error,java.lang.String,int,java.lang.Object)
com.example.core.data.NewsRepository$getBookmarkedNews$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)
com.example.core.data.NewsDao_Impl$1: NewsDao_Impl$1(com.example.core.data.NewsDao_Impl,androidx.room.RoomDatabase)
com.example.core.data.NewsDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)
com.example.core.domain.model.News$Creator: com.example.core.domain.model.News createFromParcel(android.os.Parcel)
com.example.core.data.NewsDao_Impl$4: kotlin.Unit call()
com.example.core.data.NewsDao: java.lang.Object updateNews(com.example.core.data.NewsEntity,kotlin.coroutines.Continuation)
com.example.core.data.NewsRepository$getBookmarkedNews$2: NewsRepository$getBookmarkedNews$2(kotlin.coroutines.Continuation)
com.example.core.data.NewsDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.data.NewsEntity: java.lang.String toString()
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.example.core.domain.model.News: com.example.core.domain.model.News copy$default(com.example.core.domain.model.News,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
com.example.core.domain.model.News: java.lang.String toString()
com.example.core.data.NewsRepository$Companion: NewsRepository$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.example.core.domain.model.News: boolean isBookmarked()
com.example.core.domain.model.News: java.lang.String getLink()
com.example.core.data.ListEventsItem: boolean equals(java.lang.Object)
com.example.core.domain.model.News: com.example.core.domain.model.News copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.example.core.data.NewsDao_Impl$8: void finalize()
com.example.core.data.NewsDao_Impl$4: java.lang.Object call()
com.example.core.data.NewsRepository$Companion: NewsRepository$Companion()
com.example.core.data.NewsEntity: void writeToParcel(android.os.Parcel,int)
com.example.core.data.NewsDatabase_Impl: java.util.List access$100(com.example.core.data.NewsDatabase_Impl)
com.example.core.domain.model.News$Creator: java.lang.Object createFromParcel(android.os.Parcel)
com.example.core.data.ListEventsItem: java.lang.String getCategory()
com.example.core.data.NewsEntity$Creator: NewsEntity$Creator()
com.example.core.data.NewsDao_Impl: java.lang.Object updateNews(com.example.core.data.NewsEntity,kotlin.coroutines.Continuation)
com.example.core.domain.model.News: java.lang.String component11()
com.example.core.data.ListEventsItem: java.lang.String component13()
com.example.core.data.NewsDatabase_Impl: java.util.List access$400(com.example.core.data.NewsDatabase_Impl)
com.example.core.domain.Result$Error: java.lang.String getError()
com.example.core.data.EventResponse: boolean equals(java.lang.Object)
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1: NewsRepository$getBookmarkedNews$$inlined$map$1(kotlinx.coroutines.flow.Flow)
com.example.core.data.NewsRepository$getHeadlineNews$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.example.core.data.NewsDatabase_Impl: com.example.core.data.NewsDao newsDao()
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.example.core.data.NewsEntity: java.lang.String getWaktu()
com.example.core.domain.Result: Result(kotlin.jvm.internal.DefaultConstructorMarker)
com.example.core.data.NewsDatabase: void access$setInstance$cp(com.example.core.data.NewsDatabase)
com.example.core.data.NewsDatabase_Impl: NewsDatabase_Impl()
com.example.core.domain.model.News: int getQuota()
com.example.core.domain.usecase.NewsInteractor: java.lang.Object setBookmarkedNews(com.example.core.domain.model.News,boolean,kotlin.coroutines.Continuation)
com.example.core.data.NewsRepository$getBookmarkedNews$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.example.core.data.service.ApiConfig$Companion: com.example.core.data.service.ApiService getApiService()
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.example.core.data.NewsRepository$getBookmarkedNews$$inlined$map$1$2: NewsRepository$getBookmarkedNews$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector)
com.example.core.data.NewsDao_Impl$7: NewsDao_Impl$7(com.example.core.data.NewsDao_Impl,androidx.room.RoomSQLiteQuery)
com.example.core.domain.model.News: java.lang.String component4()
com.example.core.domain.Result$Success: java.lang.Object getData()
com.example.core.data.NewsDao_Impl$5: NewsDao_Impl$5(com.example.core.data.NewsDao_Impl,com.example.core.data.NewsEntity)
com.example.core.data.NewsRepository$Companion: com.example.core.data.NewsRepository getInstance(com.example.core.data.service.ApiService,com.example.core.data.NewsDao)
com.example.core.data.EventResponse: com.example.core.data.EventResponse copy$default(com.example.core.data.EventResponse,java.util.List,boolean,java.lang.String,int,java.lang.Object)
com.example.core.data.NewsDao_Impl$2: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.example.core.data.EventResponse: java.util.List component1()
com.example.core.data.NewsDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
com.example.core.domain.model.News$Creator: com.example.core.domain.model.News[] newArray(int)
com.example.core.domain.Result$Success: int hashCode()
com.example.core.data.ListEventsItem: int getId()
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1: NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1(kotlinx.coroutines.flow.Flow)
com.example.core.data.ListEventsItem: java.lang.String component14()
com.example.core.domain.model.News: java.lang.String getSummary()
com.example.core.data.EventResponse: java.lang.String getMessage()
com.example.core.data.NewsRepository$getHeadlineNews$2: java.lang.Object invokeSuspend(java.lang.Object)
com.example.core.data.NewsRepository: void access$setInstance$cp(com.example.core.data.NewsRepository)
com.example.core.data.NewsEntity: java.lang.String getPublishedAt()
com.example.core.domain.model.News: java.lang.String getMediaCover()
com.example.core.domain.model.News: void setBookmarked(boolean)
com.example.core.data.NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2: NewsRepository$getHeadlineNews$1$invokeSuspend$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector)
com.example.core.domain.usecase.NewsInteractor: kotlinx.coroutines.flow.Flow getBookmarkedNews()
com.example.core.domain.usecase.NewsUseCase: kotlinx.coroutines.flow.Flow getBookmarkedNews()
com.example.core.data.NewsRepository$getBookmarkedNews$2: java.lang.Object invokeSuspend(java.lang.Object)
com.example.core.utils.DataMapper: com.example.core.data.NewsEntity mapDomainToEntity(com.example.core.domain.model.News)
com.example.core.data.ListEventsItem: java.lang.String component10()
com.example.core.data.EventResponse: boolean getError()
com.example.core.domain.model.News: News(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.example.core.domain.usecase.NewsInteractor: kotlinx.coroutines.flow.Flow getHeadlineNews()
com.example.core.data.NewsEntity: java.lang.String getTitle()
com.example.core.data.NewsEntity: java.lang.String getSummary()
com.example.core.data.NewsDao_Impl$2: java.lang.String createQuery()
com.example.core.domain.Result$Error: java.lang.String toString()
com.example.core.domain.repository.INewsRepository: kotlinx.coroutines.flow.Flow getHeadlineNews()
com.example.core.domain.Result$Error: boolean equals(java.lang.Object)
com.example.core.data.NewsDatabase: com.example.core.data.NewsDatabase access$getInstance$cp()
com.example.core.data.NewsDao: java.lang.Object insertNews(java.util.List,kotlin.coroutines.Continuation)
com.example.core.data.NewsDatabase: NewsDatabase()
com.example.core.domain.model.News: java.lang.String component12()
com.example.core.data.ListEventsItem: java.lang.String component12()
com.example.core.domain.Result$Error: com.example.core.domain.Result$Error copy(java.lang.String)
com.example.core.domain.usecase.NewsUseCase: kotlinx.coroutines.flow.Flow getHeadlineNews()
com.example.core.data.ListEventsItem: com.example.core.data.ListEventsItem copy(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
com.example.core.data.service.ApiService: java.lang.Object getActiveEvents(kotlin.coroutines.Continuation)
com.example.core.data.NewsDao_Impl: kotlinx.coroutines.flow.Flow getNews()
com.example.core.data.ListEventsItem: java.lang.String component6()
com.example.core.data.ListEventsItem: java.lang.String component7()
com.example.core.domain.repository.INewsRepository: java.lang.Object setBookmarkedNews(com.example.core.domain.model.News,boolean,kotlin.coroutines.Continuation)
